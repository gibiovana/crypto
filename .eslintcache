[{"/home/nicolaschartiot/Documents/Dev/crypto/src/index.js":"1","/home/nicolaschartiot/Documents/Dev/crypto/src/App.js":"2","/home/nicolaschartiot/Documents/Dev/crypto/src/reportWebVitals.js":"3","/home/nicolaschartiot/Documents/Dev/crypto/src/components/TabPanel.js":"4","/home/nicolaschartiot/Documents/Dev/crypto/src/components/Symmetric.js":"5","/home/nicolaschartiot/Documents/Dev/crypto/src/components/Asymmetric.js":"6","/home/nicolaschartiot/Documents/Dev/crypto/src/components/AsymmetricPanel.js":"7","/home/nicolaschartiot/Documents/Dev/crypto/src/components/AsymmetricSteps/Keys.js":"8","/home/nicolaschartiot/Documents/Dev/crypto/src/components/AsymmetricSteps/Encryption.js":"9","/home/nicolaschartiot/Documents/Dev/crypto/src/components/AsymmetricSteps/Decryption.js":"10"},{"size":501,"mtime":1608341317611,"results":"11","hashOfConfig":"12"},{"size":295,"mtime":1608341317159,"results":"13","hashOfConfig":"12"},{"size":364,"mtime":1608341317627,"results":"14","hashOfConfig":"12"},{"size":2172,"mtime":1608340103329,"results":"15","hashOfConfig":"12"},{"size":2663,"mtime":1608341317555,"results":"16","hashOfConfig":"12"},{"size":147,"mtime":1608341317235,"results":"17","hashOfConfig":"12"},{"size":2517,"mtime":1608340103325,"results":"18","hashOfConfig":"12"},{"size":1035,"mtime":1608341317447,"results":"19","hashOfConfig":"12"},{"size":2208,"mtime":1608341317407,"results":"20","hashOfConfig":"12"},{"size":1920,"mtime":1608341317339,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g89eyj",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},"/home/nicolaschartiot/Documents/Dev/crypto/src/index.js",[],"/home/nicolaschartiot/Documents/Dev/crypto/src/App.js",[],["45","46"],"/home/nicolaschartiot/Documents/Dev/crypto/src/reportWebVitals.js",[],"/home/nicolaschartiot/Documents/Dev/crypto/src/components/TabPanel.js",[],"/home/nicolaschartiot/Documents/Dev/crypto/src/components/Symmetric.js",[],"/home/nicolaschartiot/Documents/Dev/crypto/src/components/Asymmetric.js",[],"/home/nicolaschartiot/Documents/Dev/crypto/src/components/AsymmetricPanel.js",[],"/home/nicolaschartiot/Documents/Dev/crypto/src/components/AsymmetricSteps/Keys.js",[],"/home/nicolaschartiot/Documents/Dev/crypto/src/components/AsymmetricSteps/Encryption.js",["47"],"import React from 'react';\nimport '../../style/Keys.css';\n\nconst nacl = require('tweetnacl');\nconst bs58check = require('bs58check');\nconst ed2curve = require('ed2curve');\nnacl.util = require('tweetnacl-util');\n\nfunction decodeBase58Check(str) {\n  return bs58check.decode(str);\n}\n\nexport function encrypt(msg, publicKey) {\n  const ephemeralKeyPair = nacl.box.keyPair();\n  const pubKeyUInt8Array = decodeBase58Check(publicKey);\n  let nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n  const encryptedMessage = nacl.box(\n    Buffer.from(msg),\n    nonce,\n    ed2curve.convertPublicKey(pubKeyUInt8Array),\n    ephemeralKeyPair.secretKey,\n  );\n  let ciphertext = Buffer.from(encryptedMessage).toString('hex');\n  let ephemPubKey = Buffer.from(ephemeralKeyPair.publicKey).toString('hex');\n  nonce = Buffer.from(nonce).toString('hex');\n  let version = 'x25519-xsalsa20-poly1305';\n  document.getElementsByName('encrypted')[0].value = `${ciphertext}`;\n  document.getElementsByName('ephemPubKey')[0].value = `${ephemPubKey}`;\n  document.getElementsByName('nonce')[0].value = `${nonce}`;\n  document.getElementsByName('version')[0].value = `${version}`;\n}\n\nfunction Encryption() {\n  return (\n    <div>\n      <div className=\"before\">\n        <textarea placeholder=\"Texto plano\" className=\"textArea2\" id=\"message\" />\n        <br />\n        <input className=\"fields\" className=\"publicKey\" placeholder=\"Chave pÃºblica\" id=\"password\" />\n        <br />\n        <button\n          type=\"button\"\n          className=\"button2\"\n          onClick={() => encrypt(document.getElementById('message').value, document.getElementById('password').value)}\n        >\n          Encriptar\n        </button>\n      </div>\n      <div className=\"after\">\n        Texto:\n        <input placeholder=\"Texto encriptado\" name=\"encrypted\" className=\"output\" />\n        <br />\n        Key:\n        <input placeholder=\"Ephem Public Key\" name=\"ephemPubKey\" className=\"output\" />\n        <br />\n        Nonce:\n        <input placeholder=\"Nonce\" name=\"nonce\" className=\"output\" />\n        <br />\n        Version:\n        <input placeholder=\"Version\" name=\"version\" className=\"output\" />\n        <br />\n      </div>\n    </div>\n  );\n}\n\nexport default Encryption;\n","/home/nicolaschartiot/Documents/Dev/crypto/src/components/AsymmetricSteps/Decryption.js",["48"],"import React from 'react';\nimport '../../style/Keys.css';\n\nconst nacl = require('tweetnacl');\nconst ed2curve = require('ed2curve');\nnacl.util = require('tweetnacl-util');\n\nexport function decrypt(encrypted, ephemPubKey, originalNonce, version, secretKey) {\n  const receiverSecretKeyUint8Array = ed2curve.convertSecretKey(Buffer.from(secretKey, 'hex'));\n  const decrypted = nacl.box.open(encrypted, ephemPubKey, originalNonce, version, receiverSecretKeyUint8Array);\n  const finalDecryption = decrypted ? nacl.util.encodeUTF8(decrypted) : decrypted;\n  document.getElementsByName('decrypted')[0].value = `${finalDecryption}`;\n}\n\nfunction Encryption() {\n  return (\n    <div>\n      <div className=\"before\">\n        Texto:\n        <input placeholder=\"Texto encriptado\" id=\"encrypted\" className=\"output\" />\n        <br />\n        Key:\n        <input placeholder=\"Ephem Public Key\" id=\"ephemPubKey\" className=\"output\" />\n        <br />\n        Nonce:\n        <input placeholder=\"Nonce\" id=\"nonce\" className=\"output\" />\n        <br />\n        Version:\n        <input placeholder=\"Version\" id=\"version\" className=\"output\" />\n        <br />\n      </div>\n      <div className=\"after\">\n        <textarea placeholder=\"Texto plano\" className=\"textArea2\" id=\"message\" />\n        <br />\n        <input className=\"fields\" className=\"publicKey\" placeholder=\"Chave privada\" id=\"password\" />\n        <br />\n        <button\n          type=\"button\"\n          className=\"button2\"\n          onClick={() =>\n            decrypt(\n              document.getElementById('encrypted').value,\n              document.getElementById('ephemPubKey').value,\n              document.getElementById('nonce').value,\n              document.getElementById('version').value,\n              document.getElementById('password').value,\n            )\n          }\n        >\n          Decriptar\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Encryption;\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":40,"column":39,"nodeType":"55","endLine":40,"endColumn":60},{"ruleId":"53","severity":1,"message":"54","line":37,"column":37,"nodeType":"55","endLine":37,"endColumn":58},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]